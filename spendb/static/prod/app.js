angular.module("spendb.config",[]).constant("config",SPENDB_CONFIG);var spendb=angular.module("spendb",["spendb.config","ngCookies","ngRoute","duScroll","ngFileUpload","angularMoment","ui.bootstrap","ui.select","truncate"]);spendb.config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$routeProvider.when("/",{templateUrl:"home.html",controller:"HomeCtrl",reloadOnSearch:true,resolve:{page:loadIndex,datasets:loadIndexDatasets}});$routeProvider.when("/docs/:path",{templateUrl:"docs.html",controller:"DocsCtrl",resolve:{page:loadPage}});$routeProvider.when("/login",{templateUrl:"account/login.html",controller:"AccountLoginCtrl",resolve:{}});$routeProvider.when("/settings",{templateUrl:"account/settings.html",controller:"AccountSettingsCtrl",resolve:{account:loadSessionAccount}});$routeProvider.when("/accounts/:account",{templateUrl:"account/profile.html",controller:"AccountProfileCtrl",reloadOnSearch:true,resolve:{profile:loadProfile}});$routeProvider.when("/datasets",{templateUrl:"dataset/index.html",controller:"DatasetIndexCtrl",reloadOnSearch:true,resolve:{datasets:loadIndexDatasets}});$routeProvider.when("/datasets/new",{templateUrl:"dataset/new.html",controller:"DatasetNewCtrl",resolve:{session:loadSession,reference:loadReferenceData}});$routeProvider.when("/datasets/:dataset",{templateUrl:"dataset/view.html",controller:"DatasetViewCtrl",resolve:{dataset:loadDataset}});$routeProvider.when("/datasets/:dataset/admin/data",{templateUrl:"admin/data.html",controller:"AdminDataCtrl",resolve:{dataset:loadDataset}});$routeProvider.when("/datasets/:dataset/admin/runs/:run",{templateUrl:"admin/run.html",controller:"AdminRunCtrl",resolve:{dataset:loadDataset,run:loadRun}});$routeProvider.when("/datasets/:dataset/admin/metadata",{templateUrl:"admin/metadata.html",controller:"AdminMetadataCtrl",resolve:{dataset:loadDataset,reference:loadReferenceData,managers:loadManagers}});$routeProvider.when("/datasets/:dataset/admin/model",{templateUrl:"admin/model.html",controller:"AdminModelCtrl",resolve:{dataset:loadDataset,data:loadModel}});$locationProvider.html5Mode(true)}]);spendb.controller("AppCtrl",["$scope","$rootScope","$location","$http","$cookies","$window","$document","$sce","session","config",function($scope,$rootScope,$location,$http,$cookies,$window,$document,$sce,session,config){$scope.session={};$scope.showCookieWarning=!$cookies.neelieCookie;$scope.hideCookieWarning=function(){$cookies.neelieCookie=true;$scope.showCookieWarning=!$cookies.neelieCookie};$scope.setLocale=function(locale){$http.post("/set-locale",{locale:locale}).then(function(res){$window.location.reload()});return false};$scope.setTitle=function(title){$rootScope.currentTitle=title;angular.element(document.getElementsByTagName("title")).html(title+" - "+config.site_title)};$scope.resetScroll=function(){var elem=angular.element(document.getElementsByTagName("body"));$document.scrollToElement(elem,0,300)};$scope.trustAsHtml=function(text){return $sce.trustAsHtml(""+text)};$scope.logout=function(){session.logout(function(s){$scope.reloadSession()})};$scope.reloadSession=function(){session.flush();session.get(function(s){if(s.logged_in){$scope.hideCookieWarning()}$scope.session=s;$location.path("/")})};session.get(function(s){if(s.logged_in){$scope.hideCookieWarning()}$scope.session=s})}]);var loadPage=["$q","$route","$http",function($q,$route,$http){var dfd=$q.defer();$http.get("/api/3/pages/"+$route.current.params.path).then(function(res){dfd.resolve(res.data)});return dfd.promise}];spendb.controller("DocsCtrl",["$scope","$sce","page",function($scope,$sce,page){$scope.setTitle(page.title);$scope.page=page;$scope.page_html=$sce.trustAsHtml(""+page.html)}]);var loadIndex=["$q","$route","$http",function($q,$route,$http){var dfd=$q.defer();$http.get("/api/3/pages/index.html").then(function(res){dfd.resolve(res.data)});return dfd.promise}];var loadIndexDatasets=["$q","$http","$location","$route",function($q,$http,$location,$route){var dfd=$q.defer();$http.get("/api/3/datasets",{params:$location.search()}).then(function(res){dfd.resolve(res.data)});return dfd.promise}];spendb.controller("HomeCtrl",["$scope","$sce","page","datasets",function($scope,$sce,page,datasets){$scope.setTitle(page.title);$scope.page=page;$scope.datasets=datasets;$scope.page_html=$sce.trustAsHtml(""+page.html)}]);spendb.controller("AdminDataCtrl",["$scope","$rootScope","$http","$window","$routeParams","dataset",function($scope,$rootScope,$http,$window,$routeParams,dataset,sources){$scope.dataset=dataset;$rootScope.setSection("data")}]);spendb.controller("AdminMetadataCtrl",["$scope","$rootScope","$q","$http","$location","$routeParams","reference","dataset","managers","flash","validation",function($scope,$rootScope,$q,$http,$location,$routeParams,reference,dataset,managers,flash,validation){$scope.setTitle(dataset.label);$scope.reference=reference;$scope.dataset=dataset;$scope.managers=managers;$scope.suggestAccounts=function(query){var dfd=$q.defer(),params={q:query};$http.get("/api/3/accounts/_complete",{params:params}).then(function(es){var accounts=[];for(var i in es.data.results){var account=es.data.results[i],seen=false;for(var j in $scope.managers.managers){var other=$scope.managers.managers[j];if(other.name==account.name){seen=true}}if(!seen){accounts.push(account)}}dfd.resolve(accounts)});return dfd.promise};$scope.addAccount=function(){if($scope.managers.fresh&&$scope.managers.fresh.name){$scope.managers.managers.push($scope.managers.fresh);$scope.managers.fresh=null}};$scope.removeAccount=function(account){var idx=$scope.managers.managers.indexOf(account);if(idx!=-1){$scope.managers.managers.splice(idx,1)}};$scope.save=function(form){var dfd=$http.post(dataset.api_url,$scope.dataset);dfd.then(function(res){$scope.dataset=res.data;$http.post(dataset.api_url+"/managers",$scope.managers).then(function(res){$scope.managers=res.data;flash.setMessage("Your changes have been saved!","success");$scope.resetScroll()})},validation.handle(form))}}]);spendb.controller("AdminDeleteCtrl",["$scope","$modalInstance","$window","$location","$http","dataset",function($scope,$modalInstance,$window,$location,$http,dataset){$scope.dataset=dataset;$scope.close=function(){$modalInstance.dismiss("cancel")};$scope.delete=function(){$http.delete($scope.dataset.api_url).error(function(res){$location.path("/datasets");$modalInstance.dismiss("ok");$window.location.reload()})}}]);spendb.controller("AdminConceptCtrl",["$scope","$modalInstance","concept","dimension","validation",function($scope,$modalInstance,concept,dimension,validation){$scope.validSlug=validation.validSlug;$scope.concept=concept;$scope.dimension=dimension;$scope.close=function(){$modalInstance.dismiss("ok")}}]);spendb.controller("AdminModelCtrl",["$scope","$http","$window","$timeout","$rootScope","$modal","dataset","data","validation","flash",function($scope,$http,$window,$timeout,$rootScope,$modal,dataset,data,validation,flash){$scope.validSlug=validation.validSlug;$scope.dataset=dataset;$scope.samples=data.structure.samples;$scope.model=data.model;$scope.errors={};$rootScope.setSection("model");$scope.save=function(form){columnsToModel($scope.columns);var dfd=$http.post(dataset.api_url+"/model",data.model);dfd.then(function(res){$scope.errors={};data.model=res.data;$scope.columns=modelToColumns();flash.setMessage("Your changes have been saved!","success");$scope.resetScroll()},function(res){$scope.errors=res.data.errors;$scope.resetScroll()})};$scope.canModel=function(){if(data.structure.fields){for(var f in data.structure.fields){if(data.structure.fields.hasOwnProperty(f)){return true}}}return false};var isYearsColumn=function(column){for(var row in data.structure.samples){var val=row[column];if(!angular.isUndefined(val)&&val!=null){if(val>2100&&val<1900)return false}}return true};var inferDimension=function(name,label){if(!data.model.dimensions[name]){data.model.dimensions[name]={name:name,label:label}}return data.model.dimensions[name]};var generateColumn=function(name,spec){var c={name:"label",label:"Label",column:name};var parts=name.split("__");if(parts.length>1){c.name=parts[1];c.concept="attribute";var dim=spec.title.split(" (")[0];c.dimension=inferDimension(parts[0],dim)}else if($scope.isNumeric(spec)){if(!isYearsColumn(name)){c.concept="measure"}}if(!c.concept){c.concept="attribute";c.dimension=inferDimension(name,spec.title)}return c};var modelToColumns=function(){var model=data.model,columns=[],usedFields=[];model.measures=model.measures||{};model.dimensions=model.dimensions||{};var pushColumn=function(col,concept){col.concept=concept;if(data.structure.fields[col.column]){col.type=data.structure.fields[col.column].type;usedFields.push(col.column);columns.push(col)}};for(var measure in model.measures){var m=model.measures[measure];m.name=measure;pushColumn(m,"measure")}for(var dim in model.dimensions){var dimdata=model.dimensions[dim];dimdata.name=dim;for(var attr in dimdata.attributes){var a=dimdata.attributes[attr];a.name=attr;a.dimension=dimdata;pushColumn(a,"attribute")}}for(var field in data.structure.fields){if(usedFields.indexOf(field)==-1){var fdata=data.structure.fields[field],col=generateColumn(field,fdata);pushColumn(col,col.concept)}}return columns};var columnsToModel=function(columns){var model={dimensions:{},measures:{}};for(var idx in columns){var col=columns[idx];if(col.concept=="measure"){model.measures[col.name]={label:col.label,column:col.column}}else{var dim=col.dimension.name;if(!model.dimensions[dim]){model.dimensions[dim]={label:col.dimension.label,attributes:{}}}model.dimensions[dim].attributes[col.name]={label:col.label,column:col.column}}}data.model=model;$scope.model=model};$scope.isNumeric=function(col){return col.type=="integer"||col.type=="float"||col.type=="decimal"};$scope.updateConcept=function(col){if(col.concept=="attribute"){col.dimension=inferDimension(col.name,col.label)}else{delete col.dimension}};$scope.editConcept=function(col){var d=$modal.open({templateUrl:"admin/concept.html",controller:"AdminConceptCtrl",backdrop:true,resolve:{concept:function(){return col.concept},dimension:function(){return col.concept=="attribute"?col.dimension:col}}})};$scope.getDimensions=function(col){var dimensions=[],objects=[],colDim=false;for(var i in $scope.columns){var coli=$scope.columns[i],dim=coli.dimension;if(dim&&dimensions.indexOf(dim.name)==-1){if(col.name==dim.name)colDim=true;dim.group="Currently in use";dimensions.push(dim.name);objects.push(dim)}}if(!colDim){var dim=inferDimension(col.name,col.label);dim.group="Create a new dimension";objects.push(dim)}return objects.sort(function(a,b){if(a.label>b.label)return 1;if(a.label<b.label)return-1;return 0})};$scope.getCellClass=function(field,value){var clazz="text";if($scope.isNumeric(field)){clazz="numeric"}if(!value){clazz+=" empty"}return clazz};$scope.columns=modelToColumns()}]);spendb.controller("AdminRunCtrl",["$scope","$http","$location","$routeParams","dataset","run",function($scope,$http,$location,$routeParams,dataset,run){$scope.dataset=dataset;$scope.run=run.data;$rootScope.setSection("data")}]);spendb.controller("DatasetCtrl",["$scope","$rootScope","$http","$modal","config",function($scope,$rootScope,$http,$modal,config){$scope.currentSection="home";$scope.dataset=config.dataset;$rootScope.setSection=function(section){$scope.currentSection=section};$scope.deleteDataset=function(){var d=$modal.open({templateUrl:"admin/delete.html",controller:"AdminDeleteCtrl",backdrop:true,resolve:{dataset:function(){return $scope.dataset}}})};$scope.togglePrivate=function(){$scope.dataset.private=!$scope.dataset.private;$http.post($scope.dataset.api_url,$scope.dataset).then(function(res){$scope.dataset=res.data})}}]);var loadSession=["$q","session",function($q,session){var dfd=$q.defer();session.get(function(s){dfd.resolve(s)});return dfd.promise}];var loadDataset=["$route","$http","$q",function($route,$http,$q){var dfd=$q.defer(),url="/api/3/datasets/"+$route.current.params.dataset;$http.get(url).then(function(res){dfd.resolve(res.data)});return dfd.promise}];var loadManagers=["$route","$http","$q",function($route,$http,$q){var dfd=$q.defer(),url="/api/3/datasets/"+$route.current.params.dataset+"/managers";$http.get(url).then(function(res){dfd.resolve(res.data)});return dfd.promise}];var loadReferenceData=["$q","data",function($q,data){var dfd=$q.defer();data.get(function(rd){dfd.resolve(rd)});return dfd.promise}];var loadRun=["$route","$q","$http",function($route,$q,$http){var p=$route.current.params,url="/api/3/datasets/"+p.dataset+"/runs/"+p.run;return $http.get(url)}];var loadModel=["$route","$q","$http",function($route,$q,$http){var url="/api/3/datasets/"+$route.current.params.dataset,dfd=$q.defer();$q.all([$http.get(url+"/structure"),$http.get(url+"/model")]).then(function(data){dfd.resolve({structure:data[0].data,model:data[1].data})});return dfd.promise}];spendb.factory("flash",["$rootScope",function($rootScope){var currentMessage=null;$rootScope.$on("$routeChangeSuccess",function(){currentMessage=null});return{setMessage:function(message,type){currentMessage=[message,type]},getMessage:function(){if(currentMessage){return currentMessage[0]}},getType:function(){if(currentMessage){return currentMessage[1]}}}}]);spendb.factory("validation",["flash","config",function(flash,config){var makeSlug=function(text){return getSlug(text,"_")};var validSlug=function(text){if(makeSlug(text)!=text)return false;if(text.length<3||text.length>29)return false;return config.reserved_terms.indexOf(text)==-1};return{makeSlug:makeSlug,validSlug:validSlug,handle:function(form){return function(res){if(res.status==400||!form){var errors=[];for(var field in res.data.errors){form[field].$setValidity("value",false);form[field].$message=res.data.errors[field];errors.push(field)}if(angular.isDefined(form._errors)){angular.forEach(form._errors,function(field){if(errors.indexOf(field)==-1){form[field].$setValidity("value",true)}})}form._errors=errors}else{flash.setMessage(res.data.message||res.data.title||"Server error","danger")}}},clear:function(form){if(angular.isDefined(form._errors)){for(var i in form._errors){var field=form._errors[i];console.log(field);form[field].$setValidity("value",true);form[field].$message=undefined}}form._errors=undefined;form.$setPristine();form.$setValidity()}}}]);spendb.factory("data",["$http",function($http){var referenceData=$http.get("/api/3/reference");var getData=function(cb){referenceData.then(function(res){cb(res.data)})};return{get:getData}}]);spendb.factory("session",["$http",function($http){var sessionDfd=null;var logout=function(cb){$http.post("/api/3/sessions/logout").then(function(){sessionDfd=null;get(cb)})};var flush=function(){sessionDfd=null};var get=function(cb){if(sessionDfd===null){var data={_:new Date};sessionDfd=$http.get("/api/3/sessions",{params:data})}sessionDfd.then(function(res){cb(res.data)})};return{get:get,flush:flush,logout:logout}}]);spendb.controller("AccountLoginCtrl",["$scope","$modal","$http","$location","validation","session",function($scope,$modal,$http,$location,validation,session){$scope.setTitle("Login and registration");$scope.credentials={};$scope.account={};$scope.login=function(form){$http.post("/api/3/sessions/login",$scope.credentials).then(function(res){$scope.reloadSession()},validation.handle(form))};$scope.register=function(form){$http.post("/api/3/account",$scope.account).then(function(res){$location.path("/")},validation.handle(form))};$scope.resetPassword=function(){var d=$modal.open({templateUrl:"account/reset.html",controller:"AccountResetCtrl",backdrop:true,resolve:{}})}}]);var loadProfile=["$q","$http","$location","$route",function($q,$http,$location,$route){var url="/api/3/accounts/"+$route.current.params.account,dfd=$q.defer(),account=$route.current.params.account,params=angular.extend({},$location.search(),{account:account});$q.all([$http.get("/api/3/accounts/"+account),$http.get("/api/3/datasets",{params:params})]).then(function(data){dfd.resolve({account:data[0].data,datasets:data[1].data})});return dfd.promise}];spendb.controller("AccountProfileCtrl",["$scope","$http","$location","session","profile",function($scope,$http,$location,session,profile){$scope.setTitle(profile.account.display_name);$scope.account=profile.account;$scope.own_profile=false;$scope.datasets=profile.datasets;session.get(function(sess){$scope.own_profile=sess.logged_in&&sess.user.name==profile.account.name})}]);spendb.controller("AccountResetCtrl",["$scope","$modalInstance","$window","$location","$http",function($scope,$modalInstance,$window,$location,$http){$scope.data={};$scope.res={};$scope.sent=false;$scope.close=function(){$modalInstance.dismiss("ok")};$scope.send=function(){$scope.sent=true;$http.post("/api/3/reset",$scope.data).then(function(res){$scope.res=res.data},function(res){$scope.res=res.data;$scope.sent=false})}}]);var loadSessionAccount=["$q","$http","session",function($q,$http,session){var dfd=$q.defer();session.get(function(s){$http.get("/api/3/accounts/"+s.user.name).then(function(res){dfd.resolve(res.data)})});return dfd.promise}];spendb.controller("AccountSettingsCtrl",["$scope","$http","$location","validation","account","flash",function($scope,$http,$location,validation,account,flash){$scope.setTitle("Account Settings");$scope.account=account;$scope.save=function(form){$http.post(account.api_url,$scope.account).then(function(res){flash.setMessage("Your changes have been saved!","success");validation.clear(form)},validation.handle(form))}}]);spendb.controller("DatasetIndexCtrl",["$scope","$location","datasets",function($scope,$location,datasets){$scope.setTitle("Datasets in our store");$scope.datasets=datasets;$scope.hasFacet=function(name,value){var query=$location.search();if(angular.isArray(query[name])){return query[name].indexOf(value)!=-1}return query[name]==value};$scope.toggleFacet=function(name,value){var query=$location.search(),isArray=angular.isArray(query[name]);if($scope.hasFacet(name,value)){if(isArray){query[name].splice(query[name].indexOf(value),1)}else{delete query[name]}}else{if(isArray){query[name].push(value)}else if(query[name]){query[name]=[query[name],value]}else{query[name]=value}}if(query.offset){delete query["offset"]}$location.search(query)}}]);spendb.controller("DatasetNewCtrl",["$scope","$document","$http","$location","reference","validation","session",function($scope,$document,$http,$location,reference,validation,session){$scope.setTitle("Create a new dataset");$scope.validSlug=validation.validSlug;$scope.dataset={category:"budget",territories:[],"private":true};$scope.reference=reference;$scope.session=session;$scope.afterUpload=[];var scrollSection=function(el){var elem=angular.element(document.getElementById(el));$document.scrollToElement(elem,0,500)};$scope.hasDataset=function(){return session.logged_in&&angular.isDefined($scope.dataset.api_url)};$scope.hasUpload=function(){return $scope.hasDataset()&&$scope.afterUpload.length>0};$scope.createDataset=function(form){validation.clear(form);$http.post("/api/3/datasets",$scope.dataset).then(function(res){$scope.dataset=res.data;scrollSection("upload")},validation.handle(form))};$scope.createUpload=function(){if(!$scope.hasDataset())return;if($scope.hasUpload())return;$scope.afterUpload.push($scope.dataset);scrollSection("metadata")};$scope.saveDataset=function(form){if(!$scope.hasDataset())return;validation.clear(form);$http.post($scope.dataset.api_url,$scope.dataset).then(function(res){$location.path("/datasets/"+$scope.dataset.name+"/admin/data")},validation.handle(form))}}]);spendb.controller("DatasetViewCtrl",["$scope","$location","dataset",function($scope,$location,dataset){$scope.setTitle(dataset.label);$scope.dataset=dataset}]);spendb.directive("datasetList",["$http","$location",function($http,$location){return{restrict:"AE",scope:{datasets:"="},templateUrl:"directives/dataset_list.html",link:function(scope,element,attrs,model){scope.load=function(offset){var state=angular.extend({},$location.search(),{offset:offset});$location.search(state)}}}}]);spendb.directive("datasetSettings",["$http","$location",function($http,$location){return{restrict:"AE",transclude:true,scope:{dataset:"="},templateUrl:"directives/dataset_list.html",link:function(scope,element,attrs,model){scope.load=function(offset){var state=angular.extend({},$location.search(),{offset:offset});$location.search(state)}}}}]);spendb.directive("metadataEditor",["$http",function($http,data){return{restrict:"AE",scope:{dataset:"=",reference:"=",form:"="},transclude:true,templateUrl:"directives/metadata_editor.html",link:function(scope,element,attrs,model){}}}]);spendb.directive("pageBody",["$http","$location",function($http,$location){return{restrict:"E",transclude:true,templateUrl:"directives/page_body.html",link:function(scope,element,attrs,model){}}}]);spendb.directive("pageHeader",["$http","$rootScope","$location","flash",function($http,$rootScope,$location,flash){return{restrict:"E",transclude:true,scope:{},templateUrl:"directives/page_header.html",link:function(scope,element,attrs,model){scope.flash=flash;scope.title=$rootScope.currentTitle}}}]);spendb.directive("responsePager",["$timeout",function($timeout){return{restrict:"E",scope:{response:"=",load:"&load"},templateUrl:"directives/response_pager.html",link:function(scope,element,attrs,model){scope.$watch("response",function(e){scope.showPager=false;scope.pages=[];if(scope.response.pages<=1){return}var pages=[],current=scope.response.offset/scope.response.limit+1,num=Math.ceil(scope.response.total/scope.response.limit),range=3,low=current-range,high=current+range;if(low<1){low=1;high=Math.min(2*range+1,num)}if(high>num){high=num;low=Math.max(1,num-2*range+1)}for(var page=low;page<=high;page++){var offset=(page-1)*scope.response.limit;pages.push({page:page,current:page==current,offset:offset})}scope.showPager=true;scope.pages=pages})}}}]);spendb.directive("sourcesTable",["$http","$timeout",function($http,$timeout){return{restrict:"AE",scope:{dataset:"="},templateUrl:"directives/sources_table.html",link:function(scope,element,attrs,model){var sourcesUrl=scope.dataset.api_url+"/sources",loadTimeout=null;scope.sources={};scope.hasSources=function(){return angular.isDefined(scope.sources.total)};scope.canModelRun=function(run){if(!run.status=="complete"){return false}return run.operation.indexOf("to database")!=-1};scope.recheck=function(){$http.get(sourcesUrl).then(function(res){var sources=res.data;if(sources.results.length){var url=sources.results[0].runs_url;$http.get(url).then(function(res){sources.results[0].runs=res.data.results;scope.sources=sources;loadTimeout=$timeout(scope.recheck,2e3)})}else{scope.sources=sources;loadTimeout=$timeout(scope.recheck,2e3)}})};scope.recheck();scope.$on("$destroy",function(){$timeout.cancel(loadTimeout)})}}}]);spendb.directive("uploadPanel",["$http","$location","$route","Upload",function($http,$location,$route,Upload){return{restrict:"AE",scope:{dataset:"=",notify:"&"},templateUrl:"directives/upload_panel.html",link:function(scope,element,attrs,model){scope.submitForm={};scope.uploadPercent=null;scope.uploads=[];scope.uploadFile=function(){if(!scope.hasFile())return;scope.uploadPercent=1;Upload.upload({url:scope.dataset.api_url+"/sources/upload",file:scope.uploads[0]}).progress(function(evt){scope.uploadPercent=Math.max(1,parseInt(95*evt.loaded/evt.total))}).success(function(data,status,headers,config){scope.uploads=[];scope.uploadPercent=null;if(scope.notify)scope.notify()})};scope.hasFile=function(){return!scope.uploadPercent&&scope.uploads&&scope.uploads.length};scope.submitUrl=function(){if(!scope.hasUrl())return;var form=angular.copy(scope.submitForm);scope.submitForm={};$http.post(scope.dataset.api_url+"/sources/submit",form).then(function(res){if(scope.notify)scope.notify()})};scope.hasUrl=function(){return scope.submitForm.url&&scope.submitForm.url.length>3}}}}]);